<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--model版本-->
    <modelVersion>4.0.0</modelVersion>
    <!--公司或组织的唯一标识, 打包生成的jar包放本地路径也是这里-->
    <groupId>com.nengli51</groupId>
    <!--项目唯一ID-->
    <artifactId>BaseAbility</artifactId>
    <!--项目版本号-->
    <version>1.0-SNAPSHOT</version>
    <!--打包机制: pom, jar, maven-plugin, ejb, war, ear, rar, par, 默认为jar-->
    <packaging>pom</packaging>
    <!-- 聚合子module -->
    <modules>
        <module>DataStructure</module>
        <module>Framework_Test</module>
        <module>Dubbo_apply</module>
        <module>Spring_apply</module>
        <module>MyBatis_apply</module>
        <module>SpringMVC_apply</module>
        <module>SSM_apply</module>
        <module>Spark_apply</module>
        <module>Scala</module>
        <module>DesignPattern</module>
        <module>Concurrency</module>
        <module>JVM</module>
        <module>JavaIO</module>
        <module>MessageQueue</module>
        <module>Buffer</module>
        <module>JavaBase</module>
        <module>mbatis</module>
        <module>versionControl</module>
        <module>mspring</module>
        <module>CompliationPrinciple</module>

    </modules>

    <!-- 统一定义依赖版本号 -->
    <properties>
        <java.version>11</java.version>
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <!-- 编译器编码 -->
        <maven.compiler.encoding>${encoding}</maven.compiler.encoding>
        <!--设置java语言版本      -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <!--设置编译版本      -->
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <junit.version>4.13.2</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <sel4j.version>1.7.7</sel4j.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <guava.version>30.1.1-jre</guava.version>
        <lombok.version>1.18.20</lombok.version>
        <cglib.version>3.3.0</cglib.version>
        <!--
            <dom4j.version>2.1.3</dom4j.version>
            <jaxen.version>1.2.0</jaxen.version>
         -->
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.1.6</jaxen.version>
        <jmh.version>1.21</jmh.version>
        <beanutils.version>1.9.4</beanutils.version>
        <logging.version>1.2</logging.version>
        <netty.version>4.1.51.Final</netty.version>
        <jedis.version>3.2.0</jedis.version>
        <mysql.version>5.1.38</mysql.version>
        <c3p0.version>0.9.1.2</c3p0.version>
        <spring.version>5.2.0.RELEASE</spring.version>
        <spring.web.version>5.2.0.RELEASE</spring.web.version>
        <spring.aop.version>1.8.7</spring.aop.version>
        <mybatis.version>3.5.7</mybatis.version>

        <hadoop.version>2.7.3</hadoop.version>
        <scala.version>2.11.12</scala.version>
        <spark.version>2.1.1</spark.version>
        <zookeeper.version>3.4.14</zookeeper.version>
        <curator.version>2.13.0</curator.version>
        <kafka.version>2.3.0</kafka.version>

        <servlet.version>3.0.1</servlet.version>
    </properties>

    <!--    依赖版本管理: 用于子module直接引用 -->
    <dependencyManagement>
        <dependencies>
            <!--  ============================工具类================================  -->
            <!-- 单元测试 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <!-- 日志 -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${sel4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${sel4j.version}</version>
            </dependency>
            <!-- commons-lang3 各种工具类集合 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- com.google.guava/guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- /org.projectlombok/lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- cglib/cglib -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!-- dom4j -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <!-- jaxen dom4j's xpath -->
            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>${jaxen.version}</version>
            </dependency>
            <!-- jmh-core -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- jmh-generator-ann process -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${beanutils.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${logging.version}</version>
            </dependency>


            <!--  ============================网络编程驱动================================  -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <!--  ============================数据库驱动================================  -->
            <!-- redis.clients/jedis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!-- /mysql-connector-java -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/c3p0/c3p0 -->
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>


            <!--  ============================Java框架================================  -->
            <!--            Spring Stack          -->
            <!-- spring-context -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- spring-aop -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${spring.aop.version}</version>
            </dependency>
            <!--Spring-web-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.web.version}</version>
            </dependency>

            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <!--  ============================大数据生态================================  -->
            <!-- hadoop-client -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- Spark Stack -->
            <!-- scala-library -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <!-- scala-compiler -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <!-- scala-reflect -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <!-- spark-core -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <!-- spark-sql -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_2.11</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- kafka/kafka-clients -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!--  Zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <!--  Zookeeper服务框架 -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!--Java web-->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>


    <!--项目的依赖关系
    <dependency>

        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        maven认为，程序对外部的依赖会随着程序的所处阶段和应用场景而变化，所以maven中的依赖关系有作用域(scope)的限制。
        scope包含如下的取值：
            compile（编译范围）
            provided（已提供范围）
            runtime（运行时范围）
            test（测试范围）
            system（系统范围）
        <scope>provided</scope>
        设置指依赖是否可选，默认为false,即子项目默认都继承:为true,则子项目必需显示的引入，与dependencyManagement里定义的依赖类似
        <optional>false</optional>

    </dependency>
    -->

    <!-- 实际依赖: 基础公共 -->
    <dependencies>
        <!-- 单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <!-- 日志 -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <!-- 代码辅助-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- 与property中设置不同的是, 插件中的设置可用联动修改Idea中LanguageLevel-->
                    <!--Java语言版本-->
                    <source>${java.version}</source>
                    <!--编译版本-->
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>